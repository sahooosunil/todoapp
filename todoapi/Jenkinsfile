pipeline {
    agent none
    environment {
        DOCKER_IMAGE = 'sunilsahu0123/todoapi'
        DOCKER_CREDENTIALS = 'docker-hub-credential'
        SONARQUBE_ENV = 'SonarQube'
    }
    stages {
        stage('Checkout') {
            steps { // Added steps block
                checkout scm
            }
        }
        stage('Maven Build and Test') {
            agent {
                docker { image 'maven:3.8.1-adoptopenjdk-11' }
            }
            steps {
                script {
                    dir('todoapi') {
                        sh 'mvn clean verify'
                    }
                }
            }
        }
        stage('SonarQube Analysis') {
            agent {
                docker { image 'maven:3.8.1-adoptopenjdk-11' }
            }
            steps {
                script {
                    dir('todoapi') {
                        withSonarQubeEnv(){
                            sh "mvn sonar:sonar -Dsonar.projectKey=todoapp -Dsonar.projectName='todoapp'"
                        }
                    }
                }
            }
        }
//         stage('Docker Build and Push') {
//             steps {
//                 script {
//                     dir('todoapi') {
//                         def buildNumber = env.BUILD_NUMBER
//                         def imageTag = "${env.DOCKER_IMAGE}:${buildNumber}"
//                         sh "docker build -t ${imageTag} ."
//                         withDockerRegistry([credentialsId: env.DOCKER_CREDENTIALS]) {
//                             sh "docker push ${imageTag}"
//                         }
//                     }
//                 }
//             }
//         }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
    }
}